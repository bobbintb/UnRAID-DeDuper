Menu="Dedupe:2"
Title="Settings"
---
<?PHP
/* 
 */
?>

<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.filetree.css")?>">
<script src="<?autov("/webGui/javascript/jquery.filetree.js")?>"></script>
<script src="https://cdn.jsdelivr.net/npm/ansi_up@5.2.1/ansi_up.min.js"></script>

<!--PHP begin-->
<?

$bgcolor = strstr('white,azure',$display['theme']) ? '#f2f2f2' : '#1c1c1c';
$plugin = "bobbintb.system.dedupe";
$index = $_POST['index']?:'';
$cfg = parse_cfg($plugin,$index);

function parse_cfg($plugin,$index) {
  global $docroot;
  $ram = "$docroot/plugins/$plugin/default.cfg";
  $rom = "/boot/config/plugins/$plugin/{$plugin}{$index}.cfg";
  $cfg = file_exists($ram) ? parse_ini_file($ram) : [];
  return file_exists($rom) ? array_replace_recursive($cfg, parse_ini_file($rom)) : $cfg;
}
?>
<!--PHP end-->

<!--JavaScript begin-->
<script>
$(function(){
  $("#scanDir").fileTreeAttach();
});

$(function(){
  $("#dbDir").fileTreeAttach();
});

function updateInput(id) {
  var selectedFilePath = document.getElementById(id).value;
}

function checkDaemon() {
        $.ajax(url,
            {
                data: {action: 'getDaemonState'}
            }).done(function (data) {
            if (data.running) {
                $('#daemonStatusText').removeClass('daemonNotRunning');
                $('#daemonStatusText').addClass('daemonRunning');
                $('#abLog').animate({
                    scrollTop: $('#abLog')[0].scrollHeight - $('#abLog')[0].clientHeight
                }, 100);
            } else {
                $('#daemonStatusText').removeClass('daemonRunning');
                $('#daemonStatusText').addClass('daemonNotRunning');
            }
            if (data.log == "") {
                $("#abLog").html("The log is not existing or empty");
            } else {
                $("#abLog").html(data.log);
            }
        }).fail(function () {
            $("#abLog").html("Something went wrong while talking to the backend :(");
        });
    }

function scan(cmd,title,plg,func,start=0,button=0) {
  // start  = 0 : run command only when not already running (default)
  // start  = 1 : run command unconditionally
  // button = 0 : show CLOSE button (default)
  // button = 1 : hide CLOSE button
  $('#scan-button').prop('disabled', true);
  $('#scanDir').prop('disabled', true);
  $('#dbDir').prop('disabled', true);
  nchan_plugins.start();
  $.post('/webGui/include/StartCommand.php',{cmd:cmd+' nchan',start:start},function(pid) {
    if (pid==0) {
      nchan_plugins.stop();
      $('div.spinner.fixed').hide();
      $(".sweet-alert").addClass('alert');
      return;
    }
    swal({title:title,text:"<pre id='swaltext'></pre><hr>",html:true,animation:'none',showConfirmButton:button==0,confirmButtonText:"<?=_('Close')?>"},function(close){
      nchan_plugins.stop();
      $('div.spinner.fixed').hide();
      $('.sweet-alert').hide('fast');
      setTimeout(function(){bannerAlert("<?=_('Attention - scanning continues in background')?> ["+pid.toString().padStart(8,'0')+"]<i class='fa fa-bomb fa-fw abortOps' title=\"<?=_('Abort background process')?>\" onclick='abortScan("+pid+")'></i>",cmd,plg,func,start);});
    });
    $('button.confirm').prop('disabled',button!=0);
  });
}

function abortScan(pid) {
  swal({title:"<?=_('Abort scan')?>",text:"<?=_('This may leave an unknown state')?>",html:true,animation:'none',type:'warning',showCancelButton:true,confirmButtonText:"<?=_('Proceed')?>",cancelButtonText:"<?=_('Cancel')?>"},function(){
    $.post('/webGui/include/StartCommand.php',{kill:pid},function() {
      clearTimeout(timers.bannerAlert);
      timers.bannerAlert = null;
      timers.callback = null;
      forcedBanner = false;
      removeBannerWarning($.cookie('addAlert'));
      $.removeCookie('addAlert');
      $(".upgrade_notice").removeClass('alert done').hide();
      $('#scan-button').prop('disabled', false);
    });
  });
}

function deleteDB() {
  var confirmed = confirm('Are you sure you want to delete the database? This action cannot be undone.');
  if (confirmed) {
    $('#delete-db').prop('disabled', false);
    $.ajax({
      url: '/plugins/bobbintb.system.dedupe/include/delete.php',
      method: 'GET',
      data: { filePath: '<?= realpath($cfg['dbfile']) ?>/deduper.db' },
      success: function(response) {
        console.log(response);
        console.log('<?= realpath($cfg['dbfile']) ?>/deduper.db');
      },
      error: function(xhr, status, error) {
        console.error(error);
      }
    });
   refresh();
  }
}

function changeButtonText() {
  var button = document.getElementById('daemon');
  if (button.innerHTML === 'Stop daemon ') {
    button.innerHTML = 'Start daemon';
    // You can perform any other actions here when the button is clicked.
  } else {
    button.innerHTML = 'Stop daemon ';
  }
}


</script>
<!--JavaScript end-->



<style>
  dt {
    width: 200px;
  }
body{-webkit-overflow-scrolling:touch}
.errortext{color:#EF3D47;display:none}
.fileTree{background:<?=$bgcolor?>;width:300px;max-height:150px;overflow-y:scroll;overflow-x:hidden;position:absolute;z-index:100;display:none}
</style>

<form markdown="1" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="<?=$plugin?>/<?=$plugin.$index?>.cfg">
<input type="hidden" name="#cleanup" value="true">

_(Hardlinks are duplicates)_:
: <select name="hardlinks">
  <?=mk_option($cfg['hardlinks']??'', "false", _("No"))?>
  <?=mk_option($cfg['hardlinks']??'', "true", _("Yes"))?>
  </select>

<blockquote class='inline_help'>
  <p>No (Default): Files that are hardlinked (i.e. share the same inode number) are not considered duplicates.</p>
  <p>Yes: Files that are hardlinked are considered duplicates.</p>
  <p></p>
  <p>Note: If File A and File B are hardlinked they are considered one file, as they share the same inode number. In this case, neither file will show up in the list of duplicates if this setting is set to 'No'. However, if File C has the same hash as files A and B but has a different inode number, then file C will be a duplicate of files A and B, collectively. In this scenario, File C and either File A or B (but not both) will be duplicates. Essentially, setting this option to 'No' will group the files by inode, with one file representing the group per inode.</p>
</blockquote>

_(Scan directory)_:
: <input name="dir" type="text" size="15" class="setting" id="scanDir" value="<?=$cfg['dir'] ?? ''?>" data-pickroot="<?=dirname($cfg['dir']) ?? '/mnt/user'?>" data-pickfilter="HIDE_FILES_FILTER" data-pickfolders="true" <?= file_exists(realpath($cfg['dbfile']).'/deduper.db') ? 'disabled' : '' ?> onchange="updateInput(this.id)" required>
<blockquote class='inline_help'>
  <p>The scan directory can only be changed if the database doesn't exists and the daemon is stopped. Essentially, you need to start over to change this setting as doing so would invalidate any existing data.</p>
</blockquote>

_(Database location)_:
: <input name="dbfile" type="text" size="15" class="setting" id="dbDir" value="<?=$cfg['dbfile'] ?? ''?>" data-pickroot="<?=dirname($cfg['dbfile']) ?? '/mnt/cache'?>" data-pickfolders="true" data-pickfilter="db" data-pickcloseonfile="true" placeholder="Select folder to store deduper.db" <?= file_exists(realpath($cfg['dbfile']).'/deduper.db') ? 'disabled' : '' ?> onchange="updateInput(this.id)" required>
  <blockquote class='inline_help'>
  <p>The location to store the database file (deduper.db) The daemon must be stopped before changing the DB file. Essentially, you need to start over to change this setting as doing so would invalidate any existing data.</p>
</blockquote>

<input type="submit" name="#default" value="_(Default)_">
: <input type="submit" name="#apply" value="_(Apply)_"><input type="button" value="_(Done)_" onclick="done()">
</form>

<button id="delete-db" <?= !file_exists(realpath($cfg['dbfile']).'/deduper.db') ? 'disabled' : '' ?> onclick="deleteDB()">Delete database</button>

<div id="title"><span class="left"><i class="fa fa-search icon"></i>_(Scan)_</span></div>
<button id="scan-button" <?= file_exists(realpath($cfg['dbfile']).'/deduper.db') ? 'disabled' : '' ?> onclick='scan("checkit","Scanning...",":return")'>Begin scan</button>
<style>
    .daemonRunning {
        color: green;
    }
    .daemonRunning:after {
        content: 'running';
    }
    .daemonNotRunning {
        color: red;
    }
    .daemonNotRunning:after {
        content: 'not running';
    }
</style>

<font size='2'>Daemon status: <span id='daemonStatus'></span></font>
<!--
<div style="border: 1px solid white; height: 300px; width: 25vw; overflow: auto; white-space: pre-wrap;" id="daemonLines"></div>
-->
<br>
<button id="daemon" <?= !file_exists(realpath($cfg['dbfile']).'/deduper.db') ? 'disabled' : '' ?> onclick="changeButtonText()">Stop daemon </button>
