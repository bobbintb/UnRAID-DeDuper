Menu="Dedupe:2"
Title="Settings"
---
<?PHP
/* Copyright 2012-2023, Bergware International.
 */
?>

<link type="text/css" rel="stylesheet" href="<?autov("/webGui/styles/jquery.filetree.css")?>">
<script src="<?autov("/webGui/javascript/jquery.filetree.js")?>"></script>

<!--JavaScript begin-->
<script>
$(function(){
  $("#scanDir").fileTreeAttach();
});

$(function(){
  $("#dbDir").fileTreeAttach();
});

function updateInput(id) {
  var selectedFilePath = document.getElementById(id).value;
}

function checkDaemon() {
        $.ajax(url,
            {
                data: {action: 'getDaemonState'}
            }).done(function (data) {
            if (data.running) {
                $('#daemonStatusText').removeClass('daemonNotRunning');
                $('#daemonStatusText').addClass('daemonRunning');
                $('#abLog').animate({
                    scrollTop: $('#abLog')[0].scrollHeight - $('#abLog')[0].clientHeight
                }, 100);
            } else {
                $('#daemonStatusText').removeClass('daemonRunning');
                $('#daemonStatusText').addClass('daemonNotRunning');
            }
            if (data.log == "") {
                $("#abLog").html("The log is not existing or empty");
            } else {
                $("#abLog").html(data.log);
            }
        }).fail(function () {
            $("#abLog").html("Something went wrong while talking to the backend :(");
        });
    }

$(document).ready(function() {
  $('#myForm').submit(function(e) {
    btrfsScrub();
})
});



function btrfsScrub() {
  const eventSource = new EventSource('/plugins/bobbintb.system.dedupe/include/scan.php');
eventSource.onmessage = function(event) {
  const data = JSON.parse(event.data);
  // Handle the received data
  console.log(data);
  $('#btrfs-scrub').text(data);
};
}

</script>
<!--JavaScript end-->

<!--PHP begin-->
<?
$bgcolor = strstr('white,azure',$display['theme']) ? '#f2f2f2' : '#1c1c1c';
$plugin = "bobbintb.system.dedupe";
$index  = $_POST['index']?:'';
$cfg    = parse_cfg($plugin,$index);

function parse_cfg($plugin,$index) {
  global $docroot;
  $ram = "$docroot/plugins/$plugin/default.cfg";
  $rom = "/boot/config/plugins/$plugin/{$plugin}{$index}.cfg";
  $cfg = file_exists($ram) ? parse_ini_file($ram) : [];
  return file_exists($rom) ? array_replace_recursive($cfg, parse_ini_file($rom)) : $cfg;
}
?>
<!--PHP end-->

<style>
  dt {
    width: 150px;
  }
body{-webkit-overflow-scrolling:touch}
.errortext{color:#EF3D47;display:none}
.fileTree{background:<?=$bgcolor?>;width:300px;max-height:150px;overflow-y:scroll;overflow-x:hidden;position:absolute;z-index:100;display:none}
</style>



<form markdown="1" method="POST" action="/update.php" target="progressFrame">
<input type="hidden" name="#file" value="<?=$plugin?>/<?=$plugin.$index?>.cfg">
<input type="hidden" name="#cleanup" value="true">


_(Include hardlinks)_:
: <select name="hardlinks">
  <?=mk_option($cfg['hardlinks']??'', "false", _("No"))?>
  <?=mk_option($cfg['hardlinks']??'', "true", _("Yes"))?>
  </select>

<blockquote class='inline_help'>
  <p>No (Default): Files that are hardlinked (i.e. share the same inode number) are not considered duplicates.</p>
  <p>Yes: Files that are hardlinked are considered duplicates.</p>
  <p></p>
  <p>Note: If File A and File B are hardlinked they are considered one file, as they share the same inode number. In this case, neither file will show up in the list of duplicates if this setting is set to 'No'. However, if File C has the same hash as files A and B but has a different inode number, then file C will be a duplicate of files A and B, collectively. Essentially, setting this option to 'No' will group the files by inode, with one file representing the group.</p>
</blockquote>

_(Scan directory)_:
: <input type="text" size="15" class="setting" id="scanDir" value="<?=$cfg['dir'] ?? ''?>" data-pickroot="<?=dirname($cfg['dir']) ?? '/mnt/user'?>" data-pickfilter="HIDE_FILES_FILTER" data-pickfolders="true" <?= file_exists($cfg['dbfile']) ? 'disabled' : '' ?> onchange="updateInput(this.id)" required>

<blockquote class='inline_help'>
  <p>The scan directory can only be changed if the database doesn't exists and the daemon is stopped. Essentially, you need to start over to change this setting as doing so would invalidate any existing data.</p>
</blockquote>



_(Database location)_:
: <input type="text" size="15" class="setting" id="dbDir" value="<?=$cfg['dbfile'] ?? ''?>" data-pickroot="<?=dirname($cfg['dbfile']) ?? '/mnt/cache'?>" data-pickfolders="true" data-pickfilter="db" data-pickcloseonfile="true" placeholder="Select folder to store deduper.db" onchange="updateInput(this.id)" required>


  <blockquote class='inline_help'>
  <p>The location to store the database file (deduper.db) The daemon must be stopped before changing the DB file. Essentially, you need to start over to change this setting as doing so would invalidate any existing data.</p>
</blockquote>




<input type="submit" name="#default" value="_(Default)_">
: <input type="submit" name="#apply" value="_(Apply)_"><input type="button" value="_(Done)_" onclick="done()">
</form>


<div id="title"><span class="left"><i class="fa fa-search icon"></i>_(Scan)_</span></div>


<button id="btrfs-scrub-button" onclick="btrfsScrub()">Run Scrub</button>



<br>

<style>
    .daemonRunning {
        color: green;
    }

    .daemonRunning:after {
        content: 'running';
    }

    .daemonNotRunning {
        color: red;
    }

    .daemonNotRunning:after {
        content: 'not running';
    }
</style>

<font size='2'>Scan Status: <span id='daemonStatus'></span></font>
<div style='border:1px;border-style:solid;border-color:white;height:300px;overflow:auto' id='daemonLines' ></div>
<?="<pre id='btrfs-scrub'>test</pre>"?>